@model ProjectForm.Models.HomePageViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "HomePage";
}

<div class="Todo_Container">
    <div class="Todo_Header" style="text-align: center;">
        <img src="~/images/todologo.png" class="logo" />
    </div>

    <form asp-action="HomePage" method="post" onsubmit="return validateAll();">
        <div class="textbox">
            <input asp-for="TaskModel.task" type="text" placeholder="Enter your daily task!" id="task" />
            <button class="add_button" type="submit"><b>+</b></button>
        </div>

        <div class="date_row">
            <div class="date_container1">
                <p><b>Start Date</b></p>
                <input asp-for="TaskModel.start_date" type="date" id="start_date" />
            </div>
            <div class="date_container2">
                <p><b>End Date</b></p>
                <input asp-for="TaskModel.end_date" type="date" id="end_date" />
            </div>
        </div>

        <div class="scroll_container">
            @foreach (var task in Model.Tasks
         .OrderByDescending(t => t.end_date.HasValue && t.end_date.Value.Date < DateTime.Today)
         .ThenBy(t => t.end_date))
        {
            bool gecmis = task.end_date.HasValue && task.end_date.Value.Date < DateTime.Today;

            int kalanGun = 0;
            if (!gecmis && task.end_date.HasValue)
            {
                kalanGun = (int)(task.end_date.Value.Date - DateTime.Today).TotalDays;
            }

            string boxClass = "box-green";
            if (!gecmis)
            {
                if (kalanGun <= 1)
                    boxClass = "box-red";
                else if (kalanGun <= 7)
                    boxClass = "box-orange";
            }

            <div class="task_item">
                <span class="task_text @(gecmis ? "expired" : "")">
                    @task.task - @task.end_date?.ToString("dd.MM")
                </span>

                <div class="task_actions">
                    @if (!gecmis)
                    {
                        <span class="status-box @boxClass"></span>
                    }
                    <button type="button" class="edit_button"
                            onclick="quickEdit(@task.id, '@task.task.Replace("'", "\\'")')"> 
                        <i class="fas fa-edit"></i> 
                    </button>
                    <button type="button" class="delete_button" onclick="deleteTodo(@task.id)">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </div>
        }
        </div>
    </form>

    <script>
        function validateAll() {
            const task = document.getElementById("task").value.trim();

            if (!task) {
                alert("Lütfen bir görev girin.");
                return false; 
            }

            const start = document.getElementById("start_date").value;
            const end = document.getElementById("end_date").value;

            
            if (!start || !end) {
                alert("Lütfen her iki tarihi de girin.");
                return false;
            }

            if (new Date(start) > new Date(end)) {
                alert("Başlangıç tarihi, bitiş tarihinden sonra olamaz.");
                return false;
            }

            return true; 
        }
        
        function deleteTask(id) {
            if (confirm("Bu görevi silmek istediğinize emin misiniz?")) {
                fetch(`/Home/DeleteTask/${id}`, { method: "POST" })
                    .then(() => location.reload())
                    .catch(error => console.error("Silme hatası:", error));
            }
        }
        

    </script>
</div>